# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Client Node.js CI/CD

on:
  push:
    branches: 
      - main
    paths:
      - 'client/**'
      - '.github/workflows/client-node.js.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: client/node_modules
        key: ${{ runner.os }}-client-modules-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-client-modules-
    - name: Install Dependencies
      working-directory: ./client
      run: npm install
    - name: Build
      working-directory: ./client
      run: |
        CI=false \
        FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }} \
        REACT_APP_MAPBOX_ACCESS_TOKEN=${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }} \
        npm run build --if-present
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: client
        path: client/build
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: client
        path: client/build
    - name: Deploy to EC2
      uses: easingthemes/ssh-deploy@v2.1.5
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SOURCE: "client/build/"
        TARGET: ${{ secrets.REMOTE_TARGET_CLIENT }}
