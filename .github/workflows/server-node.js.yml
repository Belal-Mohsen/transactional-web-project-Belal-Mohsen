# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - '.github/workflows/server-node.js.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: server/node_modules
        key: ${{ runner.os }}-client-modules-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-client-modules-
    - name: Install Dependencies
      working-directory: ./server
      run: npm install
    - name: Deploy to EC2
      uses: easingthemes/ssh-deploy@v2.1.5
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SOURCE: "server"
        TARGET: ${{ secrets.REMOTE_TARGET_SERVER }}
        EXCLUDE: '/node_modules/*,/.git/*,/.github/*,/tests/*,/*.md'
    - name: Restart Server
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        script: |
          cd ${{ secrets.REMOTE_TARGET_SERVER }}
          npm install --production
          pm2 restart unbox-server
